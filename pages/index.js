import Head from 'next/head';
import BaseLayout from '../components/container/BaseLayout'
import firebaseApp from '../net/firebaseApp';
import {Table} from 'antd'
import { Select } from 'antd';
import { getFirestore , doc , updateDoc , orderBy,  collection , onSnapshot , query} from "firebase/firestore";
import { Fragment, useEffect, useState } from 'react';
import { DateTime } from 'luxon';

const { Option } = Select;
const formatter = Intl.NumberFormat('ko-kr')
const store = getFirestore(firebaseApp);
const orders = collection(store , 'orders');

const q = query(orders , orderBy( 'createdAt' , 'desc'));


export default function Home() {
  const [list , setList] = useState([]);

  useEffect(() => {
       return onSnapshot( q , docs => {
         const newList = [];
        docs.forEach(doc => newList.push(({id : doc.id , ...doc.data()})))
         setList(newList)
       })
  }, [])

  const columns = [
    {
      title: '이름',
      dataIndex: 'name',
      key: 'name',
    },
    {
      title: '주문내역',
      dataIndex: 'items',
      key: 'items',
      render : (text, record) => {
        return <div> 
            <ul>
                {record.items.map(item => (
                  <Fragment key={item.name}>
                        <li>{item.name} {formatter.format(item.price)}원 &times; {item.count}</li>  
                  </Fragment>
                ))}
            </ul>
          
        </div>
      }
    },
    {
      title: '합계 금액',
      dataIndex: 'itams',
      key: 'total',
      render : (text , record) => {
        return (
            <div>
            합계 : {formatter.format(sum(record.items.map(item => item.count * item.price)))}원
           </div>
        )
      }
    },
    {
      title: '상태',
      dataIndex: 'status',
      key: 'status',
      render : (text , record) => {
        return <Select value={text} onChange={value => {
          updateDoc(doc(store , 'orders' , record.id), {status : value});

        }}>
            <Select.Option value="주문완료">주문완료</Select.Option>
            <Select.Option value="제조중">제조중</Select.Option>
            <Select.Option value="제조 완료">제조 완료</Select.Option>
            <Select.Option value="픽업 완료">픽업 완료</Select.Option>
          </Select>
      }
    },
    {
      title: '주문시각',
      dataIndex: 'createdAt',
      key: 'createdAt',
      render : (text , record) => {
        return DateTime.fromSeconds(record.createdAt.seconds).toFormat('LL-dd HH:mm')
      }
    },
  ];

  
  function sum(array){
    return array.reduce((acc, num) => {
     acc += num
     return acc
   }, 0)
 }

  return (
      <BaseLayout>
           <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <h1>주문 확인</h1>
          {console.log('list' , list)}
          <Table dataSource={list} columns={columns} rowKey={'id'} />
 
      </BaseLayout> 
  )
}
